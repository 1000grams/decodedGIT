AWSTemplateFormatVersion: '2010-09-09'
Resources:
  SignupFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: signupHandler.handler
      Runtime: nodejs18.x
      Role: !GetAtt SignupFunctionRole.Arn
      Code:
        ZipFile: |


          exports.handler = async (event) => {
            const body = JSON.parse(event.body);
            const { name, email, company, role, message, type } = body;
            const params = {
              Destination: { ToAddresses: ['ops@decodedmusic.com'] },
              Message: {
                Body: { Text: { Data: `New Signup (${type}):\nName: ${name}\nEmail: ${email}\nCompany: ${company}\nRole: ${role}\nMessage: ${message}` } },
                Subject: { Data: `New Signup â€“ ${type === 'artist' ? 'Artist' : 'Licensing'} Inquiry` },
              },
              Source: 'ops@decodedmusic.com',
            };
            await ses.sendEmail(params).promise();
            return { statusCode: 200, body: 'Submitted' };
          };
  SignupFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: allowSES
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: ses:SendEmail
                Resource: '*'




